{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\python-blockchain\\\\frontend\\\\src\\\\components\\\\Blockchain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { API_BASE_URL } from '../config';\nimport Block from './Block';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_RANGE = 3;\n\nfunction Blockchain() {\n  _s();\n\n  const [blockchain, setBlockchain] = useState([]);\n  const [blockchainLength, setBlockchainLength] = useState(0);\n\n  const fetchBlockchainPage = ({\n    start,\n    end\n  }) => {\n    fetch(`${API_BASE_URL}/blockchain/range?start=${start}&end=${end}`).then(response => response.json()).then(json => setBlockchain(json));\n  };\n\n  useEffect(() => {\n    fetchBlockchainPage({\n      start: 0,\n      end: PAGE_RANGE\n    });\n    fetch(`${API_BASE_URL}/blockchain/length`).then(response => response.json()).then(json => setBlockchainLength(json));\n  }, []);\n  const buttonNumbers = [];\n\n  for (let i = 0; i < blockchainLength / PAGE_RANGE; i++) {\n    buttonNumbers.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Blockchain\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Blockchain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: blockchain.map(block => /*#__PURE__*/_jsxDEV(Block, {\n        block: block\n      }, block.hash, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: buttonNumbers.map(number => {\n        const start = number * PAGE_RANGE;\n        const end = (number + 1) * PAGE_RANGE;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => fetchBlockchainPage({\n            start,\n            end\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            variant: \"danger\",\n            children: number + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), ' ']\n        }, number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Blockchain, \"ET2+PUQHmx3KahRnTTeJfgLipx4=\");\n\n_c = Blockchain;\nexport default Blockchain;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blockchain\");","map":{"version":3,"sources":["C:/Users/User/python-blockchain/frontend/src/components/Blockchain.js"],"names":["React","useState","useEffect","Button","API_BASE_URL","Block","PAGE_RANGE","Blockchain","blockchain","setBlockchain","blockchainLength","setBlockchainLength","fetchBlockchainPage","start","end","fetch","then","response","json","buttonNumbers","i","push","map","block","hash","number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,UAAU,GAAG,CAAnB;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,CAAD,CAAxD;;AAEA,QAAMW,mBAAmB,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAoB;AAC9CC,IAAAA,KAAK,CAAE,GAAEX,YAAa,2BAA0BS,KAAM,QAAOC,GAAI,EAA5D,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAIT,aAAa,CAACS,IAAD,CAF7B;AAGD,GAJD;;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,mBAAmB,CAAC;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,GAAG,EAAER;AAAjB,KAAD,CAAnB;AAEAS,IAAAA,KAAK,CAAE,GAAEX,YAAa,oBAAjB,CAAL,CACGY,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAIP,mBAAmB,CAACO,IAAD,CAFnC;AAGD,GANQ,EAMN,EANM,CAAT;AAQA,QAAMC,aAAa,GAAG,EAAtB;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACV,gBAAgB,GAACJ,UAAjC,EAA6Cc,CAAC,EAA9C,EAAkD;AAChDD,IAAAA,aAAa,CAACE,IAAd,CAAmBD,CAAnB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAEIZ,UAAU,CAACc,GAAX,CAAeC,KAAK,iBAAI,QAAC,KAAD;AAAwB,QAAA,KAAK,EAAEA;AAA/B,SAAYA,KAAK,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA,cAAxB;AAFJ;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAA,gBAEIL,aAAa,CAACG,GAAd,CAAkBG,MAAM,IAAI;AAC1B,cAAMZ,KAAK,GAAGY,MAAM,GAAGnB,UAAvB;AACA,cAAMQ,GAAG,GAAG,CAACW,MAAM,GAAC,CAAR,IAAanB,UAAzB;AAEA,4BACE;AAAmB,UAAA,OAAO,EAAE,MAAMM,mBAAmB,CAAC;AAAEC,YAAAA,KAAF;AAASC,YAAAA;AAAT,WAAD,CAArD;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,IAAb;AAAkB,YAAA,OAAO,EAAC,QAA1B;AAAA,sBACGW,MAAM,GAAC;AADV;AAAA;AAAA;AAAA;AAAA,kBADF,EAGY,GAHZ;AAAA,WAAWA,MAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OAXD;AAFJ;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAlDQlB,U;;KAAAA,U;AAoDT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { API_BASE_URL } from '../config';\r\nimport Block from './Block';\r\n\r\nconst PAGE_RANGE = 3;\r\n\r\nfunction Blockchain() {\r\n  const [blockchain, setBlockchain] = useState([]);\r\n  const [blockchainLength, setBlockchainLength] = useState(0);\r\n\r\n  const fetchBlockchainPage = ({ start, end }) => {\r\n    fetch(`${API_BASE_URL}/blockchain/range?start=${start}&end=${end}`)\r\n      .then(response => response.json())\r\n      .then(json => setBlockchain(json));\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchBlockchainPage({ start: 0, end: PAGE_RANGE });\r\n\r\n    fetch(`${API_BASE_URL}/blockchain/length`)\r\n      .then(response => response.json())\r\n      .then(json => setBlockchainLength(json));\r\n  }, []);\r\n\r\n  const buttonNumbers = [];\r\n  for (let i=0; i<blockchainLength/PAGE_RANGE; i++) {\r\n    buttonNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Blockchain\">\r\n      <hr />\r\n      <h3>Blockchain</h3>\r\n      <div>\r\n        {\r\n          blockchain.map(block => <Block key={block.hash} block={block} />)\r\n        }\r\n      </div>\r\n      <div>\r\n        {\r\n          buttonNumbers.map(number => {\r\n            const start = number * PAGE_RANGE;\r\n            const end = (number+1) * PAGE_RANGE;\r\n\r\n            return (\r\n              <span key={number} onClick={() => fetchBlockchainPage({ start, end })}>\r\n                <Button size=\"sm\" variant=\"danger\">\r\n                  {number+1}\r\n                </Button>{' '}\r\n              </span>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blockchain;"]},"metadata":{},"sourceType":"module"}