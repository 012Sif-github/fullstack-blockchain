{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\python-blockchain\\\\frontend\\\\src\\\\components\\\\ConductTransaction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FormGroup, FormControl, Button } from 'react-bootstrap';\nimport { API_BASE_URL } from '../config';\nimport history from '../history';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ConductTransaction() {\n  _s();\n\n  const [amount, setAmount] = useState(0);\n  const [recipient, setRecipient] = useState('');\n  const [knownAddresses, setKnownAddresses] = useState([]);\n  useEffect(() => {\n    fetch(`${API_BASE_URL}/known-addresses`).then(response => response.json()).then(json => setKnownAddresses(json));\n  }, []);\n\n  const updateRecipient = event => {\n    setRecipient(event.target.value);\n  };\n\n  const updateAmount = event => {\n    setAmount(Number(event.target.value));\n  };\n\n  const submitTransaction = () => {\n    fetch(`${API_BASE_URL}/wallet/transact`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        recipient,\n        amount\n      })\n    }).then(response => response.json()).then(json => {\n      console.log('submitTransaction json', json);\n      alert('Success!');\n      history.push('/transaction-pool');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ConductTransaction\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Conduct a Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        input: \"text\",\n        placeholder: \"recipient\",\n        value: recipient,\n        onChange: updateRecipient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        input: \"number\",\n        placeholder: \"amount\",\n        value: amount,\n        onChange: updateAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: submitTransaction,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Known Addresses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: knownAddresses.map((knownAddress, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"u\", {\n          children: knownAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), i !== knownAddresses.length - 1 ? ', ' : '']\n      }, knownAddress, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConductTransaction, \"cHvwAbduUjpkfxxPOorkK6QFLqo=\");\n\n_c = ConductTransaction;\nexport default ConductTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConductTransaction\");","map":{"version":3,"sources":["C:/Users/User/python-blockchain/frontend/src/components/ConductTransaction.js"],"names":["React","useState","useEffect","Link","FormGroup","FormControl","Button","API_BASE_URL","history","ConductTransaction","amount","setAmount","recipient","setRecipient","knownAddresses","setKnownAddresses","fetch","then","response","json","updateRecipient","event","target","value","updateAmount","Number","submitTransaction","method","headers","body","JSON","stringify","console","log","alert","push","map","knownAddress","i","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FormGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { API_BASE_URL } from '../config';\r\nimport history from '../history';\r\n\r\nfunction ConductTransaction() {\r\n  const [amount, setAmount] = useState(0);\r\n  const [recipient, setRecipient] = useState('');\r\n  const [knownAddresses, setKnownAddresses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`${API_BASE_URL}/known-addresses`)\r\n      .then(response => response.json())\r\n      .then(json => setKnownAddresses(json));\r\n  }, []);\r\n\r\n  const updateRecipient = event => {\r\n    setRecipient(event.target.value);\r\n  }\r\n\r\n  const updateAmount = event => {\r\n    setAmount(Number(event.target.value));\r\n  }\r\n\r\n  const submitTransaction = () => {\r\n    fetch(`${API_BASE_URL}/wallet/transact`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ recipient, amount })\r\n    }).then(response => response.json())\r\n      .then(json => {\r\n        console.log('submitTransaction json', json);\r\n\r\n        alert('Success!');\r\n\r\n        history.push('/transaction-pool');\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"ConductTransaction\">\r\n      <Link to=\"/\">Home</Link>\r\n      <hr />\r\n      <h3>Conduct a Transaction</h3>\r\n      <br />\r\n      <FormGroup>\r\n        <FormControl\r\n          input=\"text\"\r\n          placeholder=\"recipient\"\r\n          value={recipient}\r\n          onChange={updateRecipient}\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <FormControl\r\n          input=\"number\"\r\n          placeholder=\"amount\"\r\n          value={amount}\r\n          onChange={updateAmount}\r\n        />\r\n      </FormGroup>\r\n      <div>\r\n        <Button\r\n          variant=\"danger\"\r\n          onClick={submitTransaction}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n      <br />\r\n      <h4>Known Addresses</h4>\r\n      <div>\r\n        {\r\n          knownAddresses.map((knownAddress, i) => (\r\n            <span key={knownAddress}>\r\n              <u>{knownAddress}</u>{i !== knownAddresses.length - 1 ? ', ' : ''}\r\n            </span>\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConductTransaction;"]},"metadata":{},"sourceType":"module"}